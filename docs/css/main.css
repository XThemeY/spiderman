.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor;
}

.icon-arrowDown {
  font-size: 0.6rem;
  width: 1.33333em;
}

.icon-facebook {
  font-size: 51.2rem;
  width: 0.625em;
}

.icon-github {
  font-size: 51.2rem;
  width: 0.96875em;
}

.icon-instagram {
  font-size: 51.2rem;
  width: 0.875em;
}

.icon-scroll {
  font-size: 26.3rem;
  width: 0.06084em;
}

.icon-telegram {
  font-size: 51.2rem;
  width: 0.96875em;
}

.icon-twitter {
  font-size: 51.2rem;
  width: 1em;
}

.icon-vector {
  font-size: 6.4rem;
  width: 0.65625em;
}

.icon-vk {
  font-size: 51.2rem;
  width: 1.125em;
}

.header {
  width: 100%;
  min-width: 320px;
  height: 600px;
}

@media only screen and (min-width: 768px) {
  .header {
    height: 600px;
  }
}

@media only screen and (min-width: 1200px) {
  .header {
    height: 760px;
  }
}

.carousel {
  position: absolute;
  width: 100%;
  min-width: inherit;
  height: inherit;
  z-index: -1;
}

@media only screen and (min-width: 768px) {
  .carousel {
    height: inherit;
  }
}

@media only screen and (min-width: 1200px) {
  .carousel {
    height: inherit;
  }
}

.carousel-inner {
  height: 100%;
}

.carousel-item {
  height: 100%;
}

.carousel-item .carousel-bg-img {
  width: 362%;
}

@media only screen and (min-width: 768px) {
  .carousel-item .carousel-bg-img {
    width: 155%;
  }
}

@media only screen and (min-width: 1200px) {
  .carousel-item .carousel-bg-img {
    width: 125%;
  }
}

.spider-img {
  position: absolute;
  bottom: 0px;
  left: calc(100vw / 2 - 120px);
  width: 280px;
  height: auto;
}

@media only screen and (min-width: 768px) {
  .spider-img {
    left: calc(100vw / 2 - 335px);
    width: 405px;
  }
}

@media only screen and (min-width: 1200px) {
  .spider-img {
    left: calc(100vw / 2 - 455px);
    width: 595px;
  }
}

.fineas-img {
  position: absolute;
  bottom: 0px;
  left: calc(100vw / 2 - 95px);
  width: 220px;
  height: auto;
}

@media only screen and (min-width: 768px) {
  .fineas-img {
    left: calc(100vw / 2 - 325px);
    width: 345px;
  }
}

@media only screen and (min-width: 1200px) {
  .fineas-img {
    left: calc(100vw / 2 - 455px);
    width: 520px;
  }
}

.header-wrapper {
  margin: 0 auto;
  margin-top: 55px;
}

@media only screen and (min-width: 768px) {
  .header-wrapper {
    float: right;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: 300px;
    margin: 0;
    margin-top: 90px;
    margin-right: 70px;
  }
}

@media only screen and (min-width: 1200px) {
  .header-wrapper {
    width: 570px;
    margin-right: 25px;
    margin-top: 185px;
  }
}

.header-desc {
  padding: 0 30px;
}

@media only screen and (min-width: 768px) {
  .header-desc {
    padding: 0;
    padding-left: 80px;
  }
}

.header__vb-header {
  padding: 0 25px;
  text-align: center;
  font-size: 3.6rem;
  margin-bottom: 25px;
}

@media only screen and (min-width: 768px) {
  .header__vb-header {
    padding: 0;
    padding-right: 60px;
    margin-bottom: 15px;
    font-size: 4.5rem;
  }
}

@media only screen and (min-width: 1200px) {
  .header__vb-header {
    margin-bottom: 35px;
    padding-right: 115px;
    font-size: 6.8rem;
  }
}

.main-desc {
  padding: 0 20px;
  text-align: center;
  font-size: 1.4rem;
}

@media only screen and (min-width: 768px) {
  .main-desc {
    text-align: left;
    padding: 0;
    font-size: 1.8rem;
    padding-right: 50px;
  }
}

@media only screen and (min-width: 1200px) {
  .main-desc {
    padding-right: 55px;
    font-size: 2rem;
  }
}

.social {
  display: none;
}

@media only screen and (min-width: 768px) {
  .social {
    display: block;
    margin-top: 110px;
  }
}

@media only screen and (min-width: 1200px) {
  .social {
    margin-top: 110px;
  }
}

.social-icon {
  font-size: 2.5em;
}

.social-link {
  display: inline-block;
  -webkit-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
}

.social-link + .social-link {
  margin-top: 20px;
}

.social-link:hover {
  color: red;
}

.navigationbar {
  padding-top: 30px;
}

.navigationbar .navmenu {
  position: fixed;
  top: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  background: rgba(0, 0, 0, 0.8);
  left: 100%;
  height: 100vh;
  text-align: center;
  -webkit-transition: left 0.5s;
  -o-transition: left 0.5s;
  transition: left 0.5s;
}

.navigationbar .navmenu li {
  position: relative;
  display: block;
  margin: 20px 0;
}

.navigationbar .navmenu li a {
  color: white;
  font-size: 2rem;
  text-transform: uppercase;
  padding: 10px;
}

.navigationbar .navmenu li a:hover {
  color: #ff2424;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}

@media only screen and (min-width: 768px) {
  .navigationbar .navmenu li a {
    font-size: 1.6rem;
  }
}

@media only screen and (min-width: 1200px) {
  .navigationbar .navmenu li a {
    font-size: 2rem;
  }
}

.navigationbar .navmenu li .icon-arrowDown {
  display: none;
  position: absolute;
  right: 0;
}

@media only screen and (min-width: 576px) {
  .navigationbar .navmenu li .icon-arrowDown {
    display: block;
    top: 10px;
  }
}

@media only screen and (min-width: 768px) {
  .navigationbar .navmenu li .icon-arrowDown {
    top: 9px;
  }
}

@media only screen and (min-width: 1200px) {
  .navigationbar .navmenu li .icon-arrowDown {
    top: 13px;
  }
}

@media only screen and (min-width: 576px) {
  .navigationbar .navmenu li {
    display: inline-block;
    margin: 0 20px;
  }
}

.navigationbar .navmenu.active {
  left: 0;
  top: 0;
}

.navigationbar .navmenu .submenu {
  position: absolute;
  display: none;
  left: -10px;
  margin-top: 5px;
  z-index: 2;
}

.navigationbar .navmenu .submenu li {
  display: block;
  width: 135px;
  height: 50px;
  background: #171c22;
}

.navigationbar .navmenu .submenu li a {
  line-height: 50px;
  color: white;
  font-size: 1.35rem;
  text-transform: uppercase;
  padding: 10px;
}

.navigationbar .navmenu .submenu li a:hover {
  color: #ff2424;
  -webkit-transition: 0.5s;
  -o-transition: 0.5s;
  transition: 0.5s;
}

@media only screen and (min-width: 576px) {
  .navigationbar .navmenu {
    position: relative;
    width: auto;
    height: auto;
    background: none;
    left: auto;
    float: right;
    display: block;
  }
}

@media only screen and (min-width: 768px) {
  .navigationbar {
    padding-top: 45px;
  }
}

@media only screen and (min-width: 1200px) {
  .navigationbar {
    padding-top: 70px;
  }
}

.logo {
  font: 1.6rem "Kurale", serif;
}

@media only screen and (min-width: 768px) {
  .logo {
    font-size: 1.8rem;
  }
}

@media only screen and (min-width: 1200px) {
  .logo {
    font-size: 2.4rem;
  }
}

.toggle-menu {
  position: relative;
  cursor: pointer;
  margin-right: 40px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  float: right;
  width: 40px;
  height: 30px;
  z-index: 3;
}

.toggle-menu span {
  background: white;
  margin: auto;
  position: relative;
  width: 100%;
  height: 5px;
}

.toggle-menu span::before,
.toggle-menu span:after {
  background: white;
  content: "";
  position: absolute;
  width: inherit;
  height: inherit;
  left: 0;
  -webkit-transition: 0.3s;
  -o-transition: 0.3s;
  transition: 0.3s;
}

.toggle-menu span::before {
  top: 10px;
}

.toggle-menu span:after {
  bottom: 10px;
}

.toggle-menu.active span {
  background: transparent;
}

.toggle-menu.active span::before {
  top: 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.toggle-menu.active span:after {
  bottom: 0;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

@media only screen and (min-width: 576px) {
  .toggle-menu {
    display: none;
  }
}

.section_why {
  background: #171C22;
  padding: 50px 0;
}

.container {
  max-width: auto;
  margin: 0 auto;
  padding: 0 15px;
}

@media only screen and (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media only screen and (min-width: 1200px) {
  .container {
    max-width: 1200px;
  }
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-size: 62.5%;
}

body {
  margin: 0px;
  padding: 0px;
  font-family: "Open Sans", sans-serif;
  color: white;
  background: #171c22;
}

img {
  width: 100%;
  display: block;
}

a {
  color: white;
  text-decoration: none;
}

ul {
  padding: 0;
  margin: 0;
}

li {
  list-style: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  padding: 0;
  margin: 0;
  font-family: "Kurale", serif;
  font-weight: normal;
}

p {
  padding: 0;
  margin: 0;
  font-family: "Open Sans", sans-serif;
  font-weight: normal;
}

button {
  background: transparent;
  font-family: "Open Sans", sans-serif;
}

button:focus {
  outline: none;
}

textarea {
  outline: none;
  resize: none;
  display: inline-block;
  font-family: "Open Sans", sans-serif;
}

input[type="text"] {
  font-family: "Open Sans", sans-serif;
}

input[type="text"]:focus {
  outline: none;
}

.clearfix::after {
  content: "";
  clear: both;
  display: block;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
