.header {
  position: relative;
  height: 530px;
}

.header-bg {
  position: absolute;
  z-index: -1;
  height: inherit;
}

.header-bg .bg-img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  -o-object-position: left bottom;
  object-position: left bottom;
}

.header-img {
  position: absolute;
  bottom: 11px;
  left: 55%;
  width: 220px;
  height: 220px;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.header-wrapper {
  padding-top: 30px;
}

.header__vs-header {
  margin-bottom: 35px;
}

.header__vb-header {
  text-align: center;
  margin-bottom: 30px;
}

.main-desc {
  padding: 0;
  text-align: center;
  font-size: 1.4rem;
}

.container {
  width: inherit;
  margin: 0 auto;
  padding: 0 15px;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-size: 62.5%;
}

body {
  margin: 0px;
  padding: 0px;
  font-family: "sans-serif";
  color: white;
}

img {
  width: 100%;
  display: block;
}

a {
  color: white;
  text-decoration: none;
}

ul {
  padding: 0;
  margin: 0;
}

li {
  list-style: none;
  padding: 0;
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  padding: 0;
  margin: 0;
  font-family: "Kurale", serif;
  font-weight: normal;
}

p {
  padding: 0;
  margin: 0;
  font-family: 'Open Sans', sans-serif;
  font-weight: normal;
}

button {
  background: transparent;
  font-family: "sans-serif";
}

button:focus {
  outline: none;
}

textarea {
  outline: none;
  resize: none;
  display: inline-block;
  font-family: "sans-serif";
}

input[type="text"] {
  font-family: "sans-serif";
}

input[type="text"]:focus {
  outline: none;
}

.clearfix::after {
  content: "";
  clear: both;
  display: block;
}

.vb-header {
  font-size: 3.6rem;
}

.vs-header {
  font-size: 1.1rem;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2Nrcy9faGVhZGVyLnNjc3MiLCJtYWluLmNzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsIm1haW4uc2NzcyIsInV0aWxzL192YXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDSSxrQkFBa0I7Q0FDbEIsYUFBYTtBQ0NqQjs7QURFQTtDQUNJLGtCQUFrQjtDQUNsQixXQUFXO0NBQ1gsZUFBZTtBQ0NuQjs7QURKQTtDQUtRLFdBQVc7Q0FDWCxZQUFZO0NBQ1osb0JBQWlCO0lBQWpCLGlCQUFpQjtDQUNqQiwrQkFBNEI7SUFBNUIsNEJBQTRCO0FDR3BDOztBRENBO0NBQ0ksa0JBQWtCO0NBQ2xCLFlBQVk7Q0FDWixTQUFTO0NBQ1QsWUFBWTtDQUNaLGFBQWE7Q0FDYixtQ0FBMkI7S0FBM0IsK0JBQTJCO1NBQTNCLDJCQUEyQjtBQ0UvQjs7QURDQTtDQUNJLGlCQUFpQjtBQ0VyQjs7QURDQTtDQUNJLG1CQUFtQjtBQ0V2Qjs7QURDQTtDQUNJLGtCQUFrQjtDQUNyQixtQkFBbUI7QUNFcEI7O0FEQ0E7Q0FDQyxVQUFXO0NBQ1gsa0JBQWtCO0NBQ2xCLGlCQUFpQjtBQ0VsQjs7QUMxQ0E7Q0FDQyxjQUFjO0NBQ2QsY0FBYztDQUNkLGVBRUQ7QUQyQ0E7O0FFL0NBOzs7Q0FHSSwyQkFBbUI7U0FBbkIsbUJBQW1CO0FGa0R2Qjs7QUUvQ0E7Q0FDSSw4QkFBc0I7U0FBdEIsc0JBQXNCO0NBQ3RCLGdCQUFnQjtBRmtEcEI7O0FFL0NBO0NBQ0ksV0FBVztDQUNYLFlBQVk7Q0FDWix5QkNacUI7Q0RhckIsWUFBWTtBRmtEaEI7O0FFL0NBO0NBQ0ksV0FBVztDQUNYLGNBQWM7QUZrRGxCOztBRS9DQTtDQUNJLFlBQVk7Q0FDWixxQkFBcUI7QUZrRHpCOztBRS9DQTtDQUNJLFVBQVU7Q0FDVixTQUFTO0FGa0RiOztBRS9DQTtDQUNJLHFCQUFxQjtDQUNyQixVQUFVO0NBQ1YsU0FBUztBRmtEYjs7QUUvQ0E7Ozs7OztDQU1JLFVBQVU7Q0FDVixTQUFTO0NBQ1QsNEJBQTRCO0NBQy9CLG1CQUFtQjtBRmtEcEI7O0FFL0NBO0NBQ0ksVUFBVTtDQUNWLFNBQVM7Q0FDWixvQ0FBb0M7Q0FDcEMsbUJBQW1CO0FGa0RwQjs7QUUvQ0E7Q0FDSSx1QkFBdUI7Q0FDdkIseUJDMURxQjtBSDRHekI7O0FFcERBO0NBSVEsYUFBYTtBRm9EckI7O0FFaERBO0NBQ0ksYUFBYTtDQUNiLFlBQVk7Q0FDWixxQkFBcUI7Q0FDckIseUJDcEVxQjtBSHVIekI7O0FFaERBO0NBQ0kseUJDeEVxQjtBSDJIekI7O0FFcERBO0NBR1EsYUFBYTtBRnFEckI7O0FFakRBO0NBQ0ksV0FBVztDQUNYLFdBQVc7Q0FDWCxjQUFjO0FGb0RsQjs7QUVqREE7Q0FDSSxpQkFBaUI7QUZvRHJCOztBRWpEQTtDQUNJLGlCQUFpQjtBRm9EckIiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogNTMwcHg7XHJcbn1cclxuXHJcbi5oZWFkZXItYmcge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICAuYmctaW1nIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBsZWZ0IGJvdHRvbTtcclxuICAgIH1cclxufVxyXG5cclxuLmhlYWRlci1pbWcge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAxMXB4O1xyXG4gICAgbGVmdDogNTUlO1xyXG4gICAgd2lkdGg6IDIyMHB4O1xyXG4gICAgaGVpZ2h0OiAyMjBweDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxufVxyXG5cclxuLmhlYWRlci13cmFwcGVyIHtcclxuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xyXG59XHJcblxyXG4uaGVhZGVyX192cy1oZWFkZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzVweDtcclxufVxyXG5cclxuLmhlYWRlcl9fdmItaGVhZGVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4ubWFpbi1kZXNje1xyXG5cdHBhZGRpbmc6IDAgO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRmb250LXNpemU6IDEuNHJlbTtcclxufVxyXG4iLCIuaGVhZGVyIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRoZWlnaHQ6IDUzMHB4O1xufVxuXG4uaGVhZGVyLWJnIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR6LWluZGV4OiAtMTtcblx0aGVpZ2h0OiBpbmhlcml0O1xufVxuXG4uaGVhZGVyLWJnIC5iZy1pbWcge1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDAlO1xuXHRvYmplY3QtZml0OiBjb3Zlcjtcblx0b2JqZWN0LXBvc2l0aW9uOiBsZWZ0IGJvdHRvbTtcbn1cblxuLmhlYWRlci1pbWcge1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGJvdHRvbTogMTFweDtcblx0bGVmdDogNTUlO1xuXHR3aWR0aDogMjIwcHg7XG5cdGhlaWdodDogMjIwcHg7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuLmhlYWRlci13cmFwcGVyIHtcblx0cGFkZGluZy10b3A6IDMwcHg7XG59XG5cbi5oZWFkZXJfX3ZzLWhlYWRlciB7XG5cdG1hcmdpbi1ib3R0b206IDM1cHg7XG59XG5cbi5oZWFkZXJfX3ZiLWhlYWRlciB7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0bWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuLm1haW4tZGVzYyB7XG5cdHBhZGRpbmc6IDA7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0Zm9udC1zaXplOiAxLjRyZW07XG59XG5cbi5jb250YWluZXIge1xuXHR3aWR0aDogaW5oZXJpdDtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHBhZGRpbmc6IDAgMTVweDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcblx0Ym94LXNpemluZzogaW5oZXJpdDtcbn1cblxuaHRtbCB7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGZvbnQtc2l6ZTogNjIuNSU7XG59XG5cbmJvZHkge1xuXHRtYXJnaW46IDBweDtcblx0cGFkZGluZzogMHB4O1xuXHRmb250LWZhbWlseTogXCJzYW5zLXNlcmlmXCI7XG5cdGNvbG9yOiB3aGl0ZTtcbn1cblxuaW1nIHtcblx0d2lkdGg6IDEwMCU7XG5cdGRpc3BsYXk6IGJsb2NrO1xufVxuXG5hIHtcblx0Y29sb3I6IHdoaXRlO1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbnVsIHtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luOiAwO1xufVxuXG5saSB7XG5cdGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luOiAwO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdGZvbnQtZmFtaWx5OiBcIkt1cmFsZVwiLCBzZXJpZjtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxucCB7XG5cdHBhZGRpbmc6IDA7XG5cdG1hcmdpbjogMDtcblx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG5idXR0b24ge1xuXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblx0Zm9udC1mYW1pbHk6IFwic2Fucy1zZXJpZlwiO1xufVxuXG5idXR0b246Zm9jdXMge1xuXHRvdXRsaW5lOiBub25lO1xufVxuXG50ZXh0YXJlYSB7XG5cdG91dGxpbmU6IG5vbmU7XG5cdHJlc2l6ZTogbm9uZTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmb250LWZhbWlseTogXCJzYW5zLXNlcmlmXCI7XG59XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcblx0Zm9udC1mYW1pbHk6IFwic2Fucy1zZXJpZlwiO1xufVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXTpmb2N1cyB7XG5cdG91dGxpbmU6IG5vbmU7XG59XG5cbi5jbGVhcmZpeDo6YWZ0ZXIge1xuXHRjb250ZW50OiBcIlwiO1xuXHRjbGVhcjogYm90aDtcblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbi52Yi1oZWFkZXIge1xuXHRmb250LXNpemU6IDMuNnJlbTtcbn1cblxuLnZzLWhlYWRlciB7XG5cdGZvbnQtc2l6ZTogMS4xcmVtO1xufVxuIiwiQGltcG9ydCBcIi4uL2Jsb2Nrcy9oZWFkZXJcIjtcclxuXHJcbi5jb250YWluZXJ7XHJcblx0d2lkdGg6IGluaGVyaXQ7XHJcblx0bWFyZ2luOiAwIGF1dG87XHJcblx0cGFkZGluZzogMCAxNXB4XHJcblx0XHJcbn1cclxuIiwiQGltcG9ydCBcIi4vdXRpbHMvX3ZhcnNcIjtcclxuQGltcG9ydCBcIi4vYmFzZS9iYXNlXCI7XHJcblxyXG4qLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGZvbnQtc2l6ZTogNjIuNSU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnRGYW1pbHk7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5hIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxudWwge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxubGkge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNiB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZm9udC1mYW1pbHk6IFwiS3VyYWxlXCIsIHNlcmlmO1xyXG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbnAge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuXHRmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XHJcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250RmFtaWx5O1xyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHJlc2l6ZTogbm9uZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udEZhbWlseTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cInRleHRcIl0ge1xyXG4gICAgZm9udC1mYW1pbHk6ICRmb250RmFtaWx5O1xyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuLmNsZWFyZml4OjphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLnZiLWhlYWRlciB7XHJcbiAgICBmb250LXNpemU6IDMuNnJlbTtcclxufVxyXG5cclxuLnZzLWhlYWRlciB7XHJcbiAgICBmb250LXNpemU6IDEuMXJlbTtcclxufVxyXG4iLCIkbWVkaWFXaWR0aFBob25lSG9yaXpvbnRhbDo1NzZweDtcclxuJG1lZGlhV2lkdGhUYWJsZXQ6IDc2OHB4O1xyXG4kbWVkaWFXaWR0aExhcHRvcDogOTkycHg7XHJcbiRtZWRpYVdpZHRoUEM6MTIwMHB4O1xyXG5cclxuJGZvbnRGYW1pbHk6IFwic2Fucy1zZXJpZlwiIDsiXX0= */
